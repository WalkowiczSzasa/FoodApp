<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="nagyitoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAQlSURBVGhDxVm7bhNBFHULtCAkPoGSClFTISpQWjqoEH9A
        QQ8SfAIFDUI0lCB+gUQporwftuM8CJHtPOxgO5yzzF7N464z6921j3T2zuPOnbnzuDNOapeXl9Hc29v7
        fAGMRiNkQ7Cc9a1W6xOyqo2yqRbaXFpautPr9U6Rzg20O9nY2LiNpGq7DKqFKbvdbguyMGCnCaH2UZRq
        IWdtCCAdgNvk7Oysvb+//3Vzc/MpimqUzLM8a3sNBoNhFasRFGAwj7VBcG+vra3dRzJo45N61EfaAe3S
        PpJqu0noZDhD/uCZ397efoakoxtDtHuu2StzJZyMv22w7H93d3evIyk6h4eHP1E+YD3xF4Bw7Nhke1uf
        QJb9qPp5KQn/wKITZ2AMjf5sEmZwopdFoydAfw0IVTcPkw9DJaSAA7VnvtPpbCcVCmIdoD1/AsrYSsnH
        j/PcuxBJnZkpBxjIiKGxXq+/yTMIc5YEvCcgVN1YpgmBiR5JOW/epNACzsAPCDGQl0p0UvViGQzSDpX+
        kmMGX0EERvJwdXX1AaQAW+sjhKobQ2dGzICTCkYbZlKYfGBgEtoTY/pX9WLoGONNCpFU2FEDOlQKGk9K
        9NOBTGBP2iTkR8DnAERaKSj7LYN+vkHaUPViyI8A+/8hRFop2NnZeQ0hjYrSvKFsqHox5Edgh0RuIWBI
        lnn1k/69A6h6MeRH4K1AZaxsBbwzUBlLPQNZUahKlhqFsu6BKmlPGrrvQ6h6MRx7E1fB0m9ikxAUvRmv
        In4+lPsW4se8CgWIEi8gAuWixH3yElJwfn7ehVB1Y5l8TJwXcI/avwfKYKW/B0jzXBDwFoNwlIvQ2BO0
        2+0tCFU3D50Mb11IATstuhJs7w8e56C0yXEyXFJ/mZm3f6HlIc+Sb4/gRM3Pz99AUm2Xh0HB+vr6I61T
        RicTAoM2PqmnRBsHthNw9F2z2fxOyXweqoUrKyu3zDIHoHO8SfkcgLNzKKLTc8wjqvAvc6H3QL/fv/Bt
        ZqjyfOxDqGPzqRamPD4+XoMsBA7y6OhoCckaZ5wz/79mPOhszDZTC20uLy/fRIT6kzVbWaB+p9P5zfbI
        ir16vX4NdYExzX7MWVELs4g9+uH09PRkOByq3rCc9VtbW++RVW0YCjDI0eLi4j0ka5T+Cl3lhFpYJc1B
        FaSDT6lts3FOBAVVs9VqyV87zLYJdPI44WSmQazAW0iBvwIpY51wGk2RgnHbI8aJoNE0aOK8oIgTQYNp
        0b/U8jqBh0HyngqUp8WrZtanpn9wcPArUJwmJ3RC7iDeO4HStJnXCXNJCgKFWTCPEybsCpzKWTLWCTww
        nf8YOUZmzQwnRtw2CwsLdzH4uilO0Ov1+qqhWVJzIgv43fJENTJr0gkT5zPRaDS+QMzuHogh47z/dOe2
        4cwjCZ3L2j84J+wYAaPXwQAAAABJRU5ErkJggg==
</value>
  </data>
</root>