<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="refreshPictbox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAMiSURBVGhD1Zm7qxQxFMavb/F5feETQdDbXbRREEEQRLyN
        rZ2NWPsXWAk2dra3sNhOsLMRbnELG8HCv8DSxkYWlh12dnf8vpBZZiYnySSZK+SDX7KbOXmcyWQmc2at
        qqqsEQtzQizMCbEwluVyeRD5LfAcvAc/wR/wBbwEG7A5jFys72KxWBxB/hWMiqI4UJcbhhEcAyMQqg/g
        OJDa7HIadKWOdQ1DuAr+glRxhi4AqQ8iDb4qy1LNpFTBCS4BTh+ncmjt4DLZj7zZnzh4CrZHkQU7cBPs
        tTiz7Ms6eAonMtiBZ+B/aVvnVoU68AL4NAH3XHcZHOOd5CmgbZJCHLgNXPoNTgGprosrgAs4Sn0d4C3S
        pS0g1QvhNQhWXwd4dm26DKQ6MbwBQerjwCNg01kg1YnhDAiW04HZbLYPuU1cE2K9CM6BKPlmYBNI2gGS
        fQwXQbR8DohbBFRabaIS4fpJktUB/TiXxA2bYR/KfD53XZ695XKAZ1lS352jDz7MkuW7hLh/b2oXSHax
        JAsnmu8eVgfIE/Ad8NEvHY8GZ4+dfwQx4jbkIVBtGY3nhliYE2JhToiFOSEW5oRYmBPNP9x9xr4pjfSt
        sdneEPBW/g08bpS1UIl+KAwho4MEOPCmGAkx7FSiH8vJQjuHkBmdRMBti6GyLLthl2EdgFqNJ/AJGNLv
        KS1blQzkwEnQajwGvZYkMc5q2NeVUh2IiUrYsEX9xPCjShIdGHLwd4FNkn2yA0MO/jyw6QaQ6iQ5wFCI
        0WAkjIfaxNupVEehkoQZYFDKaDQQBses0m+IUj2FSmCUsgYYAKgjyiGsA1fgjLoEpLorVJLoQC1uQ7Yw
        m3znNToiOMbA7wMwAz7dB2I7TVSCJ1wfB7wh7wF1BxiDlVBJURQ+B/ixgbbX1L+9VVDYUiXT6dTlQD14
        hd6PMEI3tLbRtrFV8KGSyWTCa9MQrtnW4DswrulbhH30C3BBS314af5pCYPv2+gJwE+moXqnF7XUZm9W
        P8bjMe+3DB9+xiUV1bAe0AZ4BRgc4xeYH+At4De267AZKr6qEAtzQizMCbEwH6q1f5uW927h8P9lAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>