<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="refreshPictbox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAzZJREFUaEPt2UvIDlEcx/HH/V4s3EORUlgokksuW0tZ2bCS5LqQkMuGkJJbLkVC
        Kb2vlSgiySUbJRY2IilE7kru399iapr+c+acOeepdzG/+mzenvnPOc+8M3Oe/2k1adI10gPTsQGdeIiX
        +I5f+IDHuITNmI3u8E03bMVHvMUaJMlY7IKK/gv0CnuhGq5o8IdQPH4+amcEzuE3ioVD6QqdxHAUo8Ef
        hHXcFgRHBVdBl9IqGuMTliGLa/CyE0Hpjw5YxVLSle0H1+AlaAL6l3kAq1A7vDb+VuQ9gUF4BKtI3h9c
        xybMwRjoqg3ABMzDNtyDPmvVCOE1AT0er8AqkPmJAxgP30zCWegGtmr68JrAblgHZ+5jMupmGp7Cql2l
        cgJToG/XOljOoDdiMxDPYJ3DxTkBPcJuwzpQjiJFdJ4jsM5RxTmBRbAOEt0Tujdio6XEcVjn8OGcwGVY
        B+llMxKx0eBPwTqHr9IJjEPZEkFv4djo30b3j1U/ROkEVsA6QAu2PojNYlj1Q5VOYCWsA/YgRXbAqh+q
        dAKjoPV7/sOfYa0W60TL4HztutahNDNxF1+hV/8MpMxavIE1sCpahtzCYDRp0qRJF8kQaPVZ95eS3tJ6
        NKaMHt16lH/BHaiXVJr1sAYWai5SRC9NDTxfW52Q0oWkXsv5D9e1ESmiZYtVfznMpJrAQsSmL97Bqr8E
        ZlJMYD9SRPeSVV991tLlQ+wE1JVIEfWfyrp+aj+WJmYCqQbfE9dgnUPUwShN3QmkGrx+pZ2AdQ65CGfq
        TECtELVEYqNfeeqHWucQPU5Hw5m6V0BNKeelrchUqDlm1c6sRmVi7gE1APQNql3om4k4DFfjTE7DKzET
        yGgZom9zO/SzUYNUY1cNXu3CqLmrTYmb+AurRt4N9IJXfCbg0/JO5SrUFfdO1QS0R6VNh/O5v7XLMeiR
        GhTXBDR4PeayaBtIHTrrszF0hZeiVvS/aRUtDj7LMKivWXUT+vgB3dBRXYYFKBZWUWvw+WgXZh+0ZVo8
        vsoLaM94KJJEm8f6YfIeuiJVg89HzdpZ0IC0mf0Eao5pB+YbnkN7bBeg/qo2RULqN2nSnrRa/wHFlGO6
        KHb0GAAAAABJRU5ErkJggg==
</value>
  </data>
</root>